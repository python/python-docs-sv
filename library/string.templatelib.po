# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Daniel Nylander <po@danielnylander.se>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-23 14:15+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/python-doc/teams/5390/"
"sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid ":mod:`!string.templatelib` --- Support for template string literals"
msgstr ":mod:`!string.templatelib` --- Stöd för mallsträngslitteraler"

msgid "**Source code:** :source:`Lib/string/templatelib.py`"
msgstr "**Källkod:** :source:`Lib/string/templatelib.py`"

msgid ":ref:`Format strings <f-strings>`"
msgstr ":ref:`Formatsträngar <f-strings>`"

msgid ":ref:`Template string literal (t-string) syntax <t-strings>`"
msgstr ":ref:`Syntax för mallsträngens bokstav (t-string) <t-strings>`"

msgid ":pep:`750`"
msgstr ":pep:`750`"

msgid "Template strings"
msgstr "Mall för strängar"

msgid ""
"Template strings are a mechanism for custom string processing. They have the "
"full flexibility of Python's :ref:`f-strings`, but return a :class:"
"`Template` instance that gives access to the static and interpolated (in "
"curly braces) parts of a string *before* they are combined."
msgstr ""
"Template strings är en mekanism för anpassad strängbehandling. De har samma "
"flexibilitet som Pythons :ref:`f-strings`, men returnerar en :class:"
"`Template`\\-instans som ger tillgång till de statiska och interpolerade "
"(inom hakparenteser) delarna av en sträng *innan* de kombineras."

msgid ""
"To write a t-string, use a ``'t'`` prefix instead of an ``'f'``, like so:"
msgstr ""
"För att skriva en t-sträng använder du ett ``'t'``-prefix istället för ett "
"``'f'``, så här:"

msgid ""
">>> pi = 3.14\n"
">>> t't-strings are new in Python {pi!s}!'\n"
"Template(\n"
"   strings=('t-strings are new in Python ', '!'),\n"
"   interpolations=(Interpolation(3.14, 'pi', 's', ''),)\n"
")"
msgstr ""
">>> pi = 3.14\n"
">>> t't-strings are new in Python {pi!s}!'\n"
"Template(\n"
"   strings=('t-strings are new in Python ', '!'),\n"
"   interpolations=(Interpolation(3.14, 'pi', 's', ''),)\n"
")"

msgid "Types"
msgstr "Typer"

msgid ""
"The :class:`!Template` class describes the contents of a template string. It "
"is immutable, meaning that attributes of a template cannot be reassigned."
msgstr ""
"Klassen :class:`!Template` beskriver innehållet i en mallsträng. Den är "
"oföränderlig, vilket innebär att attribut i en mall inte kan tilldelas på "
"nytt."

msgid ""
"The most common way to create a :class:`!Template` instance is to use the :"
"ref:`template string literal syntax <t-strings>`. This syntax is identical "
"to that of :ref:`f-strings <f-strings>`, except that it uses a ``t`` prefix "
"in place of an ``f``:"
msgstr ""
"Det vanligaste sättet att skapa en :class:`!Template`\\-instans är att "
"använda :ref:`template string literal syntax <t-strings>`. Denna syntax är "
"identisk med den för :ref:`f-strings <f-strings>`, förutom att den använder "
"ett ``t``-prefix i stället för ett ``f``:"

msgid ""
"Templates are stored as sequences of literal :attr:`~Template.strings` and "
"dynamic :attr:`~Template.interpolations`. A :attr:`~Template.values` "
"attribute holds the values of the interpolations:"
msgstr ""
"Mallar lagras som sekvenser av bokstavliga :attr:`~Template.strings` och "
"dynamiska :attr:`~Template.interpolations`. Ett attribut :attr:`~Template."
"values` innehåller värdena för interpoleringen:"

msgid ""
"The :attr:`!strings` tuple has one more element than :attr:`!interpolations` "
"and :attr:`!values`; the interpolations “belong” between the strings. This "
"may be easier to understand when tuples are aligned"
msgstr ""
"Tupeln :attr:`!strings` har ett element mer än :attr:`!interpolations` och :"
"attr:`!values`; interpolationerna \"hör hemma\" mellan strängarna. Detta kan "
"vara lättare att förstå när tuplerna är inriktade"

msgid ""
"template.strings:  ('Ah! We do have ',              '.')\n"
"template.values:   (                   'Camembert',    )"
msgstr ""
"template.strings:  ('Ah! We do have ',              '.')\n"
"template.values:   (                   'Camembert',    )"

msgid "Attributes"
msgstr "Attribut"

msgid "A :class:`tuple` of the static strings in the template."
msgstr "En :class:`tupel` av de statiska strängarna i mallen."

msgid "Empty strings *are* included in the tuple:"
msgstr "Tomma strängar *inkluderas* i tupeln:"

msgid ""
"The ``strings`` tuple is never empty, and always contains one more string "
"than the ``interpolations`` and ``values`` tuples:"
msgstr ""
"Tupeln ``strings`` är aldrig tom och innehåller alltid en sträng mer än "
"tuplarna ``interpolations`` och ``values``:"

msgid "A :class:`tuple` of the interpolations in the template."
msgstr "En :class:`tupel` av interpoleringarna i mallen."

msgid ""
"The ``interpolations`` tuple may be empty and always contains one fewer "
"values than the ``strings`` tuple:"
msgstr ""
"Tupeln ``interpolations`` kan vara tom och innehåller alltid ett värde "
"mindre än tupeln ``strings``:"

msgid "A tuple of all interpolated values in the template."
msgstr "En tupel av alla interpolerade värden i mallen."

msgid ""
"The ``values`` tuple always has the same length as the ``interpolations`` "
"tuple. It is always equivalent to ``tuple(i.value for i in template."
"interpolations)``."
msgstr ""
"Tupeln ``values`` har alltid samma längd som tupeln ``interpolations``. Den "
"är alltid ekvivalent med ``tuple(i.value for i in template.interpolations)``."

msgid "Methods"
msgstr "Metoder"

msgid ""
"While literal syntax is the most common way to create a :class:`!Template`, "
"it is also possible to create them directly using the constructor:"
msgstr ""
"Även om litteral syntax är det vanligaste sättet att skapa en :class:`!"
"Template`, är det också möjligt att skapa dem direkt med hjälp av "
"konstruktören:"

msgid ""
"If multiple strings are passed consecutively, they will be concatenated into "
"a single value in the :attr:`~Template.strings` attribute. For example, the "
"following code creates a :class:`Template` with a single final string:"
msgstr ""
"Om flera strängar skickas i följd kommer de att sammanfogas till ett enda "
"värde i attributet :attr:`~Template.strings`. Följande kod skapar t.ex. en :"
"class:`Template` med en enda slutsträng:"

msgid ""
"If multiple interpolations are passed consecutively, they will be treated as "
"separate interpolations and an empty string will be inserted between them. "
"For example, the following code creates a template with empty placeholders "
"in the :attr:`~Template.strings` attribute:"
msgstr ""
"Om flera interpoleringar skickas i följd kommer de att behandlas som "
"separata interpoleringar och en tom sträng kommer att infogas mellan dem. "
"Följande kod skapar t.ex. en mall med tomma platshållare i attributet :attr:"
"`~Template.strings`:"

msgid ""
"Iterate over the template, yielding each non-empty string and :class:"
"`Interpolation` in the correct order:"
msgstr ""
"Iterera över mallen, vilket ger varje icke-tom sträng och :class:"
"`Interpolation` i rätt ordning:"

msgid "Empty strings are **not** included in the iteration:"
msgstr "Tomma strängar ingår **inte** i iterationen:"

msgid ""
"Concatenate this template with another, returning a new :class:`!Template` "
"instance:"
msgstr ""
"Sammanfoga denna mall med en annan och returnera en ny :class:`!Template`-"
"instans:"

msgid ""
"Concatenating a :class:`!Template` and a ``str`` is **not** supported. This "
"is because it is unclear whether the string should be treated as a static "
"string or an interpolation. If you want to concatenate a :class:`!Template` "
"with a string, you should either wrap the string directly in a :class:`!"
"Template` (to treat it as a static string) or use an :class:`!Interpolation` "
"(to treat it as dynamic):"
msgstr ""
"Att sammanfoga en :class:`!Template` och en ``str`` stöds **inte**. Detta "
"beror på att det är oklart om strängen ska behandlas som en statisk sträng "
"eller en interpolation. Om du vill konkatenera en :class:`!Template` med en "
"sträng, bör du antingen linda in strängen direkt i en :class:`!Template` "
"(för att behandla den som en statisk sträng) eller använda en :class:`!"
"Interpolation` (för att behandla den som dynamisk):"

msgid ""
"The :class:`!Interpolation` type represents an expression inside a template "
"string. It is immutable, meaning that attributes of an interpolation cannot "
"be reassigned."
msgstr ""
"Typen :class:`!Interpolation` representerar ett uttryck inuti en mallsträng. "
"Den är oföränderlig, vilket innebär att attribut för en interpolation inte "
"kan tilldelas på nytt."

msgid ""
"Interpolations support pattern matching, allowing you to match against their "
"attributes with the :ref:`match statement <match>`:"
msgstr ""
"Interpolationer stöder mönstermatchning, vilket gör att du kan matcha mot "
"deras attribut med :ref:`match statement <match>`:"

msgid "The evaluated value of the interpolation."
msgstr "Det utvärderade värdet för interpoleringen."

msgid "The text of a valid Python expression, or an empty string."
msgstr "Texten i ett giltigt Python-uttryck, eller en tom sträng."

msgid ""
"The :attr:`.expression` is the original text of the interpolation's Python "
"expression, if the interpolation was created from a t-string literal. "
"Developers creating interpolations manually should either set this to an "
"empty string or choose a suitable valid Python expression."
msgstr ""
":attr:`.expression` är originaltexten för interpolerings Python-uttryck, om "
"interpoleringen skapades från en t-string-litteral. Utvecklare som skapar "
"interpoleringen manuellt bör antingen sätta detta till en tom sträng eller "
"välja ett lämpligt giltigt Python-uttryck."

msgid "The conversion to apply to the value, or ``None``."
msgstr "Den konvertering som ska tillämpas på värdet, eller ``None``."

msgid ""
"The :attr:`!conversion` is the optional conversion to apply to the value:"
msgstr ""
":attr:`!conversion` är den valfria konvertering som ska tillämpas på värdet:"

msgid ""
"Unlike f-strings, where conversions are applied automatically, the expected "
"behavior with t-strings is that code that *processes* the :class:`!Template` "
"will decide how to interpret and whether to apply the :attr:`!conversion`. "
"For convenience, the :func:`convert` function can be used to mimic f-string "
"conversion semantics."
msgstr ""
"Till skillnad från f-strängar, där konverteringar tillämpas automatiskt, är "
"det förväntade beteendet med t-strängar att kod som *behandlar* :class:`!"
"Template` bestämmer hur den ska tolka och om den ska tillämpa :attr:`!"
"conversion`. För enkelhetens skull kan funktionen :func:`convert` användas "
"för att efterlikna semantiken för konvertering av f-strängar."

msgid "The format specification to apply to the value."
msgstr "Den formatspecifikation som ska tillämpas på värdet."

msgid ""
"The :attr:`!format_spec` is an optional, arbitrary string used as the format "
"specification to present the value:"
msgstr ""
":attr:`!format_spec` är en valfri, godtycklig sträng som används som "
"formatspecifikation för att presentera värdet:"

msgid ""
"Unlike f-strings, where format specifications are applied automatically via "
"the :func:`format` protocol, the expected behavior with t-strings is that "
"code that *processes* the interpolation will decide how to interpret and "
"whether to apply the format specification. As a result, :attr:`!format_spec` "
"values in interpolations can be arbitrary strings, including those that do "
"not conform to the :func:`format` protocol."
msgstr ""
"Till skillnad från f-strängar, där formatspecifikationer tillämpas "
"automatiskt via protokollet :func:`format`, är det förväntade beteendet med "
"t-strängar att koden som *bearbetar* interpoleringen bestämmer hur "
"formatspecifikationen ska tolkas och om den ska tillämpas. Som ett resultat "
"kan :attr:`!format_spec`\\-värden i interpoleringar vara godtyckliga "
"strängar, inklusive de som inte överensstämmer med :func:`format`\\-"
"protokollet."

msgid "Create a new :class:`!Interpolation` object from component parts."
msgstr "Skapa ett nytt :class:`!Interpolation`\\-objekt av olika komponenter."

msgid "Parameters"
msgstr "Parametrar"

msgid "The evaluated, in-scope result of the interpolation."
msgstr "Det utvärderade resultatet av interpoleringen, inom räckvidden."

msgid ""
"The :ref:`conversion <formatstrings>` to be used, one of ``None``, ``'a'``, "
"``'r'``, or ``'s'``."
msgstr ""
"Den :ref:`konvertering <formatstrings>` som ska användas, en av ``None``, "
"``'a'``, ``'r'`` eller ``'s'``."

msgid ""
"An optional, arbitrary string used as the :ref:`format specification "
"<formatspec>` to present the value."
msgstr ""
"En valfri, godtycklig sträng som används som :ref:`formatspecifikation "
"<formatspec>` för att presentera värdet."

msgid "Helper functions"
msgstr "Hjälpfunktioner"

msgid ""
"Applies formatted string literal :ref:`conversion <formatstrings-"
"conversion>` semantics to the given object *obj*. This is frequently useful "
"for custom template string processing logic."
msgstr ""
"Tillämpar formaterad strängbokstäver :ref:`konvertering <formatstrings-"
"conversion>` semantik på det givna objektet *obj*. Detta är ofta användbart "
"för anpassad logik för bearbetning av mallsträngar."

msgid "Three conversion flags are currently supported:"
msgstr "Tre konverteringsflaggor stöds för närvarande:"

msgid "``'s'`` which calls :func:`str` on the value (like ``!s``),"
msgstr "``'s'`` som anropar :func:`str` på värdet (som ``!s``),"

msgid "``'r'`` which calls :func:`repr` (like ``!r``), and"
msgstr "``'r'`` som anropar :func:`repr` (som ``!r``), och"

msgid "``'a'`` which calls :func:`ascii` (like ``!a``)."
msgstr "``'a'`` som anropar :func:`ascii` (som ``!a``)."

msgid "If the conversion flag is ``None``, *obj* is returned unchanged."
msgstr "Om konverteringsflaggan är ``None`` returneras *obj* oförändrad."
